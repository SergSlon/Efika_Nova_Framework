<?php
namespace EfikaTest\EventManager;


use Efika\EventManager\EventManager;
use ReflectionClass;
use EfikaTest\EventManager\TestLibrary\CustomEvent;
use Efika\EventManager\Exception;

/**
 * Generated by PHPUnit_SkeletonGenerator.
 */
class EventTest extends \PHPUnit_Framework_TestCase
{

    /**
     * @covers Efika\EventManager\Event::setTarget
     * @covers Efika\EventManager\Event::getTarget
     */
    public function testSetAndGetTarget()
    {
        $target = new \stdClass();
        $e = new CustomEvent();

        //Throw exception if target is not an object
        try {
            $e->setTarget('empty');
        } catch (Exception $ex) {
            $this->assertNotEmpty($ex->getMessage());
        }

        //set target and test chaining
        $this->assertInstanceOf('Efika\EventManager\EventInterface', $e->setTarget($target));

        //test getting target. target must be stdClass
        $this->assertInstanceOf('\stdClass', $e->getTarget());
    }

    /**
     * @covers Efika\EventManager\Event::stopPropagation
     * @covers Efika\EventManager\Event::isPropagationStopped
     */
    public function testPropagationStopping()
    {
        $e = new CustomEvent();

        //Propagation must be false
        $this->assertFalse($e->isPropagationStopped());

        //stop propagation test chaining
        $this->assertInstanceOf('Efika\EventManager\EventInterface', $e->stopPropagation());

        //Propagation has been stopped and is false
        $this->assertTrue($e->isPropagationStopped());
    }

    /**
     * @covers Efika\EventManager\Event::setName
     * @covers Efika\EventManager\Event::getName
     */
    public function testSetAndGetName()
    {
        $name = 'onCustomTest';
        $e = new CustomEvent();
        //set name and test chaining
        $this->assertInstanceOf('Efika\EventManager\EventInterface', $e->setName($name));

        //test getting name
        $this->assertEquals($name, $e->getName());
    }

    /**
     * @covers Efika\EventManager\Event::setArguments
     * @covers Efika\EventManager\Event::getArguments
     */
    public function testSetAndGetArguments()
    {
        $arguments = ['foo', 'bar'];
        $e = new CustomEvent();

        //set name and test chaining
        $this->assertInstanceOf('Efika\EventManager\EventInterface', $e->setArguments($arguments));

        //arguments needs to be an array
        $this->assertInternalType('array',$e->getArguments());

        //test getting arguments
        $this->assertTrue(in_array('foo', $e->getArguments()));
        $this->assertTrue(in_array('bar', $e->getArguments()));
    }
}
